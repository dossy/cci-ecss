# Process this file with autoconf to produce a configure script.
AC_INIT(Makefile.in)
AC_CONFIG_HEADER(src/ecss/config.h)

# Checks for programs

# Checks for libraries

# Checks for header files
AC_HEADER_STDC
AC_CHECK_HEADERS(hash_map)

# Checks for typedefs, structures, and compiler characteristics

# Checks for library functions

# Decide whether to build a shared or a static library
AC_MSG_CHECKING(whether to build a shared library)
AC_ARG_ENABLE(shared,
  AC_HELP_STRING([--enable-shared], [build a shared library (default is YES)]),
  [shared=$enableval],
  [shared="yes"])

if test "$shared" != "no"; then
 shared="yes"
fi

AC_MSG_RESULT($shared)
AC_SUBST(shared)

# boost_headers
AC_MSG_CHECKING(for boost headers)
AC_ARG_WITH(boost_headers,
  AC_HELP_STRING([--with-boost-headers=DIR],
                 [specify path to boost headers (default DIR is /usr/include)]),
  [boost_headers=$withval],
  [boost_headers=/usr/include])

if test ! -f "$boost_headers/boost/shared_ptr.hpp"; then
  AC_MSG_ERROR(couldn't find boost headers in $boost_headers)
fi

AC_MSG_RESULT($boost_headers)
AC_SUBST(boost_headers)

# boost_lib
AC_MSG_CHECKING(for boost lib)
AC_ARG_WITH(boost_lib,
  AC_HELP_STRING([--with-boost-lib=DIR],
                 [specify path to boost libraries (default DIR is /usr/lib)]),
  [boost_lib=$withval],
  [boost_lib=/usr/lib])

AC_MSG_RESULT($boost_lib)
AC_SUBST(boost_lib)

# Generate files and clean up
AC_SUBST(prefix)
AC_OUTPUT(Makefile)
